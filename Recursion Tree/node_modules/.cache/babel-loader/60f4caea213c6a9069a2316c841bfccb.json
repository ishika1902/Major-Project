{"ast":null,"code":"var _jsxFileName = \"D:\\\\Major\\\\Recursion Tree\\\\src\\\\15puzzleComponents\\\\puzzle.jsx\";\nimport React, { Component } from 'react';\nimport Navbar from \"./navbar\";\nimport FlipMove from 'react-flip-move';\nimport SvgLines from 'react-mt-svg-lines';\nimport '../helpers/array_helpers';\nimport './style.css';\nimport { times } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FLIP_DURATION = 750;\n\nclass Puzzle extends Component {\n  constructor() {\n    super();\n\n    this.balsal = async () => {\n      for (let i = 0; i < 15; i++) {\n        this.setState({\n          squares: this.state.squares.slice().swap(i, i + 1)\n        });\n        await sleep(500);\n      }\n    };\n\n    this.state = {\n      squares: times(16, i => ({\n        value: i\n      }))\n    };\n  }\n\n  render() {\n    let classNames;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: \"#57407c\"\n      },\n      className: 'full-height',\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: 'justify-content-around ',\n        style: {\n          textAlign: \"Center\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            height: \"440px\",\n            width: \"440px\",\n            margin: 'auto'\n          },\n          className: \"m-5\",\n          children: [/*#__PURE__*/_jsxDEV(FlipMove, {\n            duration: FLIP_DURATION,\n            easing: \"cubic-bezier(.12,.36,.14,1.2)\",\n            children: [this.state.squares.map(stt => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: stt.value === 0 ? \"square \" : stt.value % 2 === 0 ? 'square shadow correct pt-1' : 'square shadow painted pt-1',\n              children: stt.value === 0 ? \"\" : stt.value\n            }, stt.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            onClick: this.balsal,\n            children: \"Animate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default Puzzle;","map":{"version":3,"names":["React","Component","Navbar","FlipMove","SvgLines","times","FLIP_DURATION","Puzzle","constructor","balsal","i","setState","squares","state","slice","swap","sleep","value","render","classNames","backgroundColor","textAlign","height","width","margin","map","stt","ms","Promise","resolve","setTimeout"],"sources":["D:/Major/Recursion Tree/src/15puzzleComponents/puzzle.jsx"],"sourcesContent":["import React, {Component} from 'react';\nimport Navbar from \"./navbar\";\nimport FlipMove from 'react-flip-move';\nimport SvgLines from 'react-mt-svg-lines';\nimport '../helpers/array_helpers';\nimport './style.css';\nimport {times} from 'lodash';\n\nconst FLIP_DURATION = 750;\n\nclass Puzzle extends Component {\n    constructor() {\n        super();\n        this.state = {\n            squares: times(16, i => ({\n                value: i\n            })),\n        };\n    }\n\n    balsal = async () => {\n        for (let i = 0; i < 15; i++) {\n            this.setState({\n                squares: this.state.squares.slice().swap(i, i + 1)\n            });\n            await sleep(500);\n        }\n\n    }\n\n    render() {\n        let classNames;\n        return (\n\n            <div style={{backgroundColor: \"#57407c\"}}\n                 className={'full-height'}\n            >\n                <Navbar/>\n                <div className={'justify-content-around '}\n                     style={{textAlign: \"Center\"}}>\n                    <div style={{textAlign: \"center\", height: \"440px\", width: \"440px\", margin: 'auto'}}\n                         className={\"m-5\"}>\n                        <FlipMove\n                            duration={FLIP_DURATION}\n                            easing=\"cubic-bezier(.12,.36,.14,1.2)\"\n                        >\n                            {this.state.squares.map((stt) =>\n                                <div key={stt.value}\n                                     className={stt.value === 0 ? \"square \" : stt.value % 2 === 0 ? 'square shadow correct pt-1' : 'square shadow painted pt-1'}\n                                >\n                                    {stt.value === 0 ? \"\" : stt.value}\n                                </div>\n                            )}\n                            <br/>\n                        </FlipMove>\n                        <button className={\"btn btn-secondary\"} onClick={this.balsal}>Animate</button>\n                    </div>\n\n                    {/*<FlipMove*/}\n                    {/*    duration={FLIP_DURATION}*/}\n                    {/*          easing=\"cubic-bezier(.12,.36,.14,1.2)\" >*/}\n                    {/*    <line key={5464} style={{strokeWidth: \"3px\", stroke: '#999'}} x2={299} y2={186}*/}\n                    {/*          x1={(this.state.squares[0].value + 1) * 50}*/}\n                    {/*          y1={(this.state.squares[0].value + 1) * 50}></line>*/}\n                    {/*    <div key={this.state.squares[0].value}*/}\n                    {/*         className={'square shadow correct pt-1'}>*/}\n                    {/*        {this.state.squares[0].value}*/}\n                    {/*    </div>*/}\n                    {/*    <div key={this.state.squares[1].value}*/}\n                    {/*         className={'square shadow correct pt-1'}>*/}\n                    {/*        {this.state.squares[1].value}*/}\n                    {/*    </div>*/}\n                    {/*</FlipMove>*/}\n                    {/*/!*<SvgLines animate={true} duration={1000}>*!/*/}\n                    {/*/!*    <svg viewBox=\"0 0 960 500\">*!/*/}\n                    {/*/!*        <line key={5464} style={{strokeWidth: \"3px\", stroke: '#999'}} x2={299} y2={186}*!/*/}\n                    {/*/!*              x1={(this.state.squares[0].value + 1) * 50}*!/*/}\n                    {/*/!*              y1={(this.state.squares[0].value + 1) * 50}></line>*!/*/}\n                    {/*/!*    </svg>*!/*/}\n                    {/*/!*</SvgLines>*!/*/}\n                </div>\n\n            </div>\n\n        );\n    }\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default Puzzle;"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAO,0BAAP;AACA,OAAO,aAAP;AACA,SAAQC,KAAR,QAAoB,QAApB;;AAEA,MAAMC,aAAa,GAAG,GAAtB;;AAEA,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;EAC3BO,WAAW,GAAG;IACV;;IADU,KASdC,MATc,GASL,YAAY;MACjB,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;QACzB,KAAKC,QAAL,CAAc;UACVC,OAAO,EAAE,KAAKC,KAAL,CAAWD,OAAX,CAAmBE,KAAnB,GAA2BC,IAA3B,CAAgCL,CAAhC,EAAmCA,CAAC,GAAG,CAAvC;QADC,CAAd;QAGA,MAAMM,KAAK,CAAC,GAAD,CAAX;MACH;IAEJ,CAjBa;;IAEV,KAAKH,KAAL,GAAa;MACTD,OAAO,EAAEP,KAAK,CAAC,EAAD,EAAKK,CAAC,KAAK;QACrBO,KAAK,EAAEP;MADc,CAAL,CAAN;IADL,CAAb;EAKH;;EAYDQ,MAAM,GAAG;IACL,IAAIC,UAAJ;IACA,oBAEI;MAAK,KAAK,EAAE;QAACC,eAAe,EAAE;MAAlB,CAAZ;MACK,SAAS,EAAE,aADhB;MAAA,wBAGI,QAAC,MAAD;QAAA;QAAA;QAAA;MAAA,QAHJ,eAII;QAAK,SAAS,EAAE,yBAAhB;QACK,KAAK,EAAE;UAACC,SAAS,EAAE;QAAZ,CADZ;QAAA,uBAEI;UAAK,KAAK,EAAE;YAACA,SAAS,EAAE,QAAZ;YAAsBC,MAAM,EAAE,OAA9B;YAAuCC,KAAK,EAAE,OAA9C;YAAuDC,MAAM,EAAE;UAA/D,CAAZ;UACK,SAAS,EAAE,KADhB;UAAA,wBAEI,QAAC,QAAD;YACI,QAAQ,EAAElB,aADd;YAEI,MAAM,EAAC,+BAFX;YAAA,WAIK,KAAKO,KAAL,CAAWD,OAAX,CAAmBa,GAAnB,CAAwBC,GAAD,iBACpB;cACK,SAAS,EAAEA,GAAG,CAACT,KAAJ,KAAc,CAAd,GAAkB,SAAlB,GAA8BS,GAAG,CAACT,KAAJ,GAAY,CAAZ,KAAkB,CAAlB,GAAsB,4BAAtB,GAAqD,4BADnG;cAAA,UAGKS,GAAG,CAACT,KAAJ,KAAc,CAAd,GAAkB,EAAlB,GAAuBS,GAAG,CAACT;YAHhC,GAAUS,GAAG,CAACT,KAAd;cAAA;cAAA;cAAA;YAAA,QADH,CAJL,eAWI;cAAA;cAAA;cAAA;YAAA,QAXJ;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ,eAeI;YAAQ,SAAS,EAAE,mBAAnB;YAAwC,OAAO,EAAE,KAAKR,MAAtD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAfJ;QAAA;UAAA;UAAA;UAAA;QAAA;MAFJ;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ;EAqDH;;AA3E0B;;AA8E/B,SAASO,KAAT,CAAeW,EAAf,EAAmB;EACf,OAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAIC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAjC,CAAP;AACH;;AAED,eAAepB,MAAf"},"metadata":{},"sourceType":"module"}