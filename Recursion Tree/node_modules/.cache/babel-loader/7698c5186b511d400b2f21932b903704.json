{"ast":null,"code":"export function convex_hull(points) {\n  if (points.size === 1) {\n    return;\n  }\n\n  const pointStart = points[0];\n  const pointEnd = points[points.length - 1];\n  const up = [],\n        down = [];\n  const pairs = [];\n  const lines = [];\n  up.push(pointStart);\n  down.push(pointStart);\n\n  for (let i = 1; i < points.length; i++) {\n    if (i === points.length - 1 || cw(pointStart, points[i], pointEnd)) {\n      while (up.length >= 2 && !cw(up[up.length - 2], up[up.length - 1], points[i])) {\n        lines.push({\n          from: up[up.length - 2],\n          to: up[up.length - 1],\n          add: false\n        });\n        up.pop();\n      }\n\n      up.push(points[i]);\n      lines.push({\n        from: up[up.length - 2],\n        to: up[up.length - 1],\n        add: true\n      });\n    }\n  }\n\n  for (let i = 0; i < points.length; i++) {\n    if (i === points.length - 1 || ccw(pointStart, points[i], pointEnd)) {\n      while (down.length >= 2 && !ccw(down[down.length - 2], down[down.length - 1], points[i])) {\n        lines.push({\n          from: down[down.length - 2],\n          to: down[down.length - 1],\n          add: false\n        });\n        down.pop();\n      }\n\n      down.push(points[i]);\n      lines.push({\n        from: down[down.length - 2],\n        to: down[down.length - 1],\n        add: true\n      });\n    }\n  }\n\n  for (let i = 0; i < up.length; i++) {\n    pairs.push(up[i]);\n  }\n\n  for (let i = down.length - 2; i > 0; i--) {\n    pairs.push(down[i]);\n  }\n\n  return [pairs, lines];\n}\n\nfunction cw(a, b, c) {\n  const f = a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy);\n\n  if (a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy) < 0) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction ccw(a, b, c) {\n  if (a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy) > 0) {\n    return true;\n  } else {\n    return false;\n  }\n}","map":{"version":3,"names":["convex_hull","points","size","pointStart","pointEnd","length","up","down","pairs","lines","push","i","cw","from","to","add","pop","ccw","a","b","c","f","xx","yy"],"sources":["C:/Users/hp/Downloads/VizALgo-master/src/algorithms/grahamScan.js"],"sourcesContent":["export function convex_hull(points){\n    if( points.size === 1 ){\n        return;\n    }\n    const pointStart = points[0];\n    const pointEnd = points[ points.length-1 ];\n    const up = [], down = [];\n    const pairs = [];\n    const lines=[];\n    up.push( pointStart);\n    down.push(pointStart);\n    for( let i = 1; i< points.length ;i++ ){\n        if( (i === (points.length - 1)) || cw( pointStart,points[i],pointEnd ) ){\n            while( up.length >=2 && !cw(up[up.length-2],up[up.length-1],points[i] ) ){\n                lines.push({\n                    from:up[up.length-2],\n                    to:up[up.length-1],\n                    add:false\n                });\n                up.pop();\n            }\n            up.push( points[i] );\n            lines.push({\n                from:up[up.length-2],\n                to:up[up.length-1],\n                add:true\n            })\n        }\n\n    }\n    for(let i = 0; i< points.length;i++){\n        if( (i === (points.length - 1)) || ccw( pointStart,points[i],pointEnd ) ){\n            while( down.length >=2 && !ccw(down[down.length-2],down[down.length-1],points[i] ) ){\n                lines.push({\n                    from:down[down.length-2],\n                    to:down[down.length-1],\n                    add:false\n                });\n                down.pop();\n            }\n            down.push( points[i] );\n            lines.push({\n                from:down[down.length-2],\n                to:down[down.length-1],\n                add:true\n            })\n        }\n    }\n\n    for (let i = 0; i < up.length; i++){\n        pairs.push(up[i]);\n    }\n    for (let i = down.length - 2; i > 0; i--) {\n        pairs.push(down[i]);\n    }\n    return [pairs,lines];\n}\n\nfunction cw(a, b, c) {\n    const f = a.xx*(b.yy-c.yy)+b.xx*(c.yy-a.yy)+c.xx*(a.yy-b.yy);\n    if( a.xx*(b.yy-c.yy)+b.xx*(c.yy-a.yy)+c.xx*(a.yy-b.yy) < 0 ){\n        return true;\n    } else{\n        return false;\n    }\n\n}\n\nfunction ccw(a, b, c){\n    if( a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy) > 0 ){\n        return true;\n    } else {\n        return false;\n    }\n\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}