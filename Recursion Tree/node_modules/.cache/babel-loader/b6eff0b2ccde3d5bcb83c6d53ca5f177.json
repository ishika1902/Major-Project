{"ast":null,"code":"var _jsxFileName = \"D:\\\\Major\\\\Recursion Tree\\\\src\\\\Turing Machine\\\\turingMachine.jsx\";\nimport React, { Component } from 'react';\nimport EntryPoint from \"../binarySearchComponent/entryPoint\";\nimport Search from \"../binarySearchComponent/search\";\nimport Ribbon from \"./ribbon\";\nimport { getNextStep, getTable } from '../algorithms/turing';\nimport Menu from \"./menu\";\nimport Navbar from \"./navbar\";\nimport Table from \"./table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass TuringMachine extends Component {\n  constructor() {\n    super();\n\n    this.handleLeftShift = () => {\n      this.setState({\n        cellStart: this.state.cellStart + 1,\n        cellEnd: this.state.cellEnd + 1,\n        midCell: this.state.midCell + 1\n      });\n    };\n\n    this.handleRightShift = () => {\n      // console.log('aaaaaaa')\n      this.setState({\n        cellStart: this.state.cellStart - 1,\n        cellEnd: this.state.cellEnd - 1,\n        midCell: this.state.midCell - 1\n      });\n    };\n\n    this.handleSet = () => {\n      this.handleReset();\n      let string = this.state.inputString1;\n      let strip = [...this.state.strip];\n\n      for (let i = 0; i < string.length; i++) {\n        strip[50 + i] = { ...strip[50 + i],\n          val: string[i]\n        };\n      }\n\n      this.setState({\n        strip\n      });\n    };\n\n    this.handleReset = () => {\n      const width = window.innerWidth;\n      const height = window.innerHeight;\n      let cellCount = Math.floor(width / 50);\n      if (cellCount % 2 === 0) cellCount--;\n      let strip = [...this.state.strip];\n      if (strip.length === 0) strip = getInitialGrid(cellCount);\n\n      for (let i = 0; i < strip.length; i++) strip[i].val = 'B';\n\n      this.setState({\n        strip,\n        midCell: 50\n      });\n      let cellStart, cellEnd;\n      cellStart = 50 + (1 - cellCount) / 2;\n      cellEnd = 50 + (cellCount - 1) / 2;\n      this.setState({\n        cellStart,\n        cellEnd,\n        state: -1\n      });\n    };\n\n    this.handleStart = () => {\n      // this.handleReset();\n      this.handleSet();\n      this.handleAlgo();\n    };\n\n    this.handleAlgo = async () => {\n      await sleep(500);\n      let state = 'q0';\n\n      while (state != 'qe') {\n        let read = this.state.strip[this.state.midCell].val;\n        read = read.toString();\n        let [nextState, write, dir, rowIdx] = getNextStep(state, read, this.state.algo);\n        this.setState({\n          state: rowIdx\n        });\n        let strip = [...this.state.strip];\n        strip[this.state.midCell].val = write;\n        document.getElementById('stepsText').innerText = 'Reads ' + read + ' on strip'; // await sleep(500);\n\n        await sleep(1000);\n        document.getElementById('stepsText').innerText = 'writes ' + write + ' on strip';\n        this.setState({\n          strip\n        });\n        await sleep(500);\n        if (dir === 'R') this.handleLeftShift();else this.handleRightShift();\n        state = nextState;\n      }\n    };\n\n    this.setInput1 = event => {\n      let input = event.target.value;\n      const filtered = [...input].filter(item => item === \"0\" || item === \"1\").slice(0, 8).join(\"\");\n      this.setState({\n        inputString1: filtered\n      });\n    };\n\n    this.setInput2 = event => {\n      let input = event.target.value;\n      const filtered = [...input].filter(item => item === \"0\" || item === \"1\").slice(0, 8).join(\"\");\n      this.setState({\n        inputString2: filtered\n      });\n    };\n\n    this.setAlgo = (pos, val) => {\n      if (pos === 0) {\n        // console.log(\"sup 0\");\n        this.setState({\n          algo: val\n        });\n      }\n    };\n\n    this.state = {\n      cellCount: 0,\n      cellStart: 0,\n      cellEnd: 0,\n      midCell: 0,\n      strip: [],\n      inputString1: \"\",\n      inputString2: \"\",\n      table: [],\n      algo: 0,\n      state: -1\n    };\n  }\n\n  componentDidMount() {\n    getNextStep('100');\n    this.handleReset();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Menu, {\n        visualize: this.handleStart,\n        onAlgoChanged: this.setAlgo,\n        onReset: this.handleReset,\n        setInput1: this.setInput1,\n        setInput2: this.setInput2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-info\",\n          children: [/*#__PURE__*/_jsxDEV(Ribbon, {\n            strip: this.state.strip,\n            midCell: this.state.midCell,\n            cellCount: this.state.cellCount,\n            cellStart: this.state.cellStart,\n            cellEnd: this.state.cellEnd\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning m-3\",\n            onClick: this.handleLeftShift,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"16\",\n              height: \"16\",\n              fill: \"currentColor\",\n              className: \"bi bi-caret-left-square-fill\",\n              viewBox: \"0 0 16 16\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm10.5 10V4a.5.5 0 0 0-.832-.374l-4.5 4a.5.5 0 0 0 0 .748l4.5 4A.5.5 0 0 0 10.5 12z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning m-3\",\n            onClick: this.handleRightShift,\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              xmlns: \"http://www.w3.org/2000/svg\",\n              width: \"16\",\n              height: \"16\",\n              fill: \"currentColor\",\n              className: \"bi bi-caret-right-square-fill\",\n              viewBox: \"0 0 16 16\",\n              children: /*#__PURE__*/_jsxDEV(\"path\", {\n                d: \"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm5.5 10a.5.5 0 0 0 .832.374l4.5-4a.5.5 0 0 0 0-.748l-4.5-4A.5.5 0 0 0 5.5 4v8z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              data: getTable(this.state.algo),\n              state: this.state.state\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"bg-light p-2 font-weight-bold text-lg-center rounded-3\",\n              id: \"stepsText\",\n              children: \"Details goes here\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst getInitialGrid = totCellCount => {\n  const strip = [];\n\n  for (let cell = 0; cell <= 100; cell++) {\n    let currentCell = {\n      id: cell,\n      val: 'B'\n    };\n    strip.push(currentCell);\n  }\n\n  return strip;\n};\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default TuringMachine;","map":{"version":3,"names":["React","Component","EntryPoint","Search","Ribbon","getNextStep","getTable","Menu","Navbar","Table","TuringMachine","constructor","handleLeftShift","setState","cellStart","state","cellEnd","midCell","handleRightShift","handleSet","handleReset","string","inputString1","strip","i","length","val","width","window","innerWidth","height","innerHeight","cellCount","Math","floor","getInitialGrid","handleStart","handleAlgo","sleep","read","toString","nextState","write","dir","rowIdx","algo","document","getElementById","innerText","setInput1","event","input","target","value","filtered","filter","item","slice","join","setInput2","inputString2","setAlgo","pos","table","componentDidMount","render","totCellCount","cell","currentCell","id","push","ms","Promise","resolve","setTimeout"],"sources":["D:/Major/Recursion Tree/src/Turing Machine/turingMachine.jsx"],"sourcesContent":["import React, {Component} from 'react';\nimport EntryPoint from \"../binarySearchComponent/entryPoint\";\nimport Search from \"../binarySearchComponent/search\";\nimport Ribbon from \"./ribbon\";\n\nimport {getNextStep, getTable} from '../algorithms/turing';\nimport Menu from \"./menu\";\nimport Navbar from \"./navbar\";\nimport Table from \"./table\";\n\nclass TuringMachine extends Component {\n    constructor() {\n        super();\n        this.state = {\n            cellCount: 0,\n            cellStart: 0,\n            cellEnd: 0,\n            midCell: 0,\n            strip: [],\n            inputString1: \"\",\n            inputString2: \"\",\n            table: [],\n            algo: 0,\n            state: -1\n        }\n    }\n\n    componentDidMount() {\n        getNextStep('100');\n        this.handleReset();\n\n\n    }\n\n    handleLeftShift = () => {\n        this.setState({\n            cellStart: this.state.cellStart + 1,\n            cellEnd: this.state.cellEnd + 1,\n            midCell: this.state.midCell + 1\n        });\n    }\n    handleRightShift = () => {\n        // console.log('aaaaaaa')\n        this.setState({\n            cellStart: this.state.cellStart - 1,\n            cellEnd: this.state.cellEnd - 1,\n            midCell: this.state.midCell - 1\n        });\n    }\n\n    handleSet = () => {\n        this.handleReset();\n        let string = this.state.inputString1;\n        let strip = [...this.state.strip];\n        for (let i = 0; i < string.length; i++) {\n            strip[50 + i] = {\n                ...strip[50 + i],\n                val: string[i]\n            }\n        }\n        this.setState({strip});\n    }\n    handleReset = () => {\n        const width = window.innerWidth;\n        const height = window.innerHeight;\n        let cellCount = Math.floor(width / 50);\n        if (cellCount % 2 === 0) cellCount--;\n        let strip = [...this.state.strip];\n        if (strip.length === 0) strip = getInitialGrid(cellCount);\n        for (let i = 0; i < strip.length; i++)\n            strip[i].val = 'B';\n\n        this.setState({strip, midCell: 50});\n        let cellStart, cellEnd;\n        cellStart = 50 + (1 - cellCount) / 2;\n        cellEnd = 50 + (cellCount - 1) / 2;\n        this.setState({cellStart, cellEnd,state:-1});\n    }\n\n    handleStart = () => {\n        // this.handleReset();\n        this.handleSet();\n        this.handleAlgo();\n    }\n\n    handleAlgo = async () => {\n        await sleep(500);\n        let state = 'q0';\n\n        while (state != 'qe') {\n\n            let read = this.state.strip[this.state.midCell].val;\n            read = read.toString();\n            let [nextState, write, dir, rowIdx] = getNextStep(state, read, this.state.algo);\n            this.setState({state: rowIdx});\n            let strip = [...this.state.strip];\n            strip[this.state.midCell].val = write;\n            document.getElementById('stepsText').innerText = 'Reads ' + read + ' on strip';\n            // await sleep(500);\n\n            await sleep(1000);\n\n            document.getElementById('stepsText').innerText = 'writes ' + write + ' on strip';\n\n            this.setState({strip});\n            await sleep(500);\n            if (dir === 'R') this.handleLeftShift();\n            else this.handleRightShift();\n\n            state = nextState;\n        }\n    }\n\n    setInput1 = (event) => {\n        let input = event.target.value;\n        const filtered = [...input].filter((item) => item === \"0\" || item === \"1\").slice(0, 8).join(\"\");\n        this.setState({inputString1: filtered});\n    }\n    setInput2 = (event) => {\n        let input = event.target.value;\n        const filtered = [...input].filter((item) => item === \"0\" || item === \"1\").slice(0, 8).join(\"\");\n        this.setState({inputString2: filtered});\n    }\n    setAlgo = (pos, val) => {\n        if (pos === 0) {\n            // console.log(\"sup 0\");\n            this.setState({algo: val});\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                <Navbar/>\n                <Menu\n                    visualize={this.handleStart}\n                    onAlgoChanged={this.setAlgo}\n                    onReset={this.handleReset}\n                    setInput1={this.setInput1}\n                    setInput2={this.setInput2}\n                />\n\n                {/*<div className='row'>*/}\n                {/*    <div className=\"input-group mt-2 col-3\">*/}\n                {/*        <input type=\"text\" id='inputText1' className=\"form-control\" placeholder=\"Input Binary\"*/}\n                {/*               aria-label=\"Username\"*/}\n                {/*               aria-describedby=\"basic-addon1\"*/}\n                {/*               onChange={this.setInput1}*/}\n                {/*        />*/}\n                {/*    </div>*/}\n                {/*    <div className=\"input-group mt-2 col-3\">*/}\n                {/*        <input type=\"text\" id='inputText1' className=\"form-control\" placeholder=\"Input Binary 2\"*/}\n                {/*               aria-label=\"Username\"*/}\n                {/*               aria-describedby=\"basic-addon1\"/>*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n\n                <center>\n                    <br/>\n                    <div className='bg-info'>\n                        {/*<h3>Turing Machine</h3>*/}\n                        <Ribbon\n                            strip={this.state.strip}\n                            midCell={this.state.midCell}\n                            cellCount={this.state.cellCount}\n                            cellStart={this.state.cellStart}\n                            cellEnd={this.state.cellEnd}\n                        ></Ribbon>\n                        <button\n                            className='btn btn-warning m-3'\n                            onClick={this.handleLeftShift}\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                                 className=\"bi bi-caret-left-square-fill\" viewBox=\"0 0 16 16\">\n                                <path\n                                    d=\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm10.5 10V4a.5.5 0 0 0-.832-.374l-4.5 4a.5.5 0 0 0 0 .748l4.5 4A.5.5 0 0 0 10.5 12z\"/>\n                            </svg>\n                        </button>\n                        <button\n                            className='btn btn-warning m-3'\n                            onClick={this.handleRightShift}\n                        >\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\"\n                                 className=\"bi bi-caret-right-square-fill\" viewBox=\"0 0 16 16\">\n                                <path\n                                    d=\"M0 2a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2zm5.5 10a.5.5 0 0 0 .832.374l4.5-4a.5.5 0 0 0 0-.748l-4.5-4A.5.5 0 0 0 5.5 4v8z\"/>\n                            </svg>\n\n                        </button>\n                    </div>\n                    <br/>\n\n                    <div className='row'>\n                        <div className='col-4'>\n                            <Table\n                                data={getTable(this.state.algo)}\n                                state={this.state.state}\n                            />\n                        </div>\n                        <div className='col-4'>\n                            <span className='bg-light p-2 font-weight-bold text-lg-center rounded-3' id='stepsText'>\n                                 Details goes here\n                            </span>\n                        </div>\n                        <div className='col-4'>\n                            {/*<textarea disabled className=\"form-control\" id=\"Textarea1\" rows=\"3\">*/}\n\n                            {/*</textarea>*/}\n                        </div>\n                    </div>\n                </center>\n            </div>\n        );\n    }\n}\n\nconst getInitialGrid = (totCellCount) => {\n    const strip = [];\n    for (let cell = 0; cell <= 100; cell++) {\n        let currentCell = {\n            id: cell,\n            val: 'B'\n        }\n        strip.push(currentCell);\n    }\n    return strip;\n}\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default TuringMachine;"],"mappings":"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"},"metadata":{},"sourceType":"module"}