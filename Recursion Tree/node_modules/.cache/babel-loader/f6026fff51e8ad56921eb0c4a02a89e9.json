{"ast":null,"code":"var _jsxFileName = \"D:\\\\Major\\\\Recursion Tree\\\\src\\\\Graph\\\\details.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Details extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.Switcherr = () => {\n      switch (this.props.algo) {\n        case 0:\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row bg-info m-0 p-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light \",\n              children: \"The Fibonacci sequence, in which each number is the sum of the two preceding ones. The sequence commonly starts from 0 and 1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 9,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light \",\n              children: \"N = Nth fibonacchi Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 13,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  bg-light \",\n              children: \"function = nCr(n,r)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light\",\n              children: [\"Fib(0) = 0 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 20,\n                columnNumber: 36\n              }, this), \"Fib(1) = 1 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 36\n              }, this), \"Fib(n) = Fib(n-1) + Fib(n-2)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 8,\n            columnNumber: 24\n          }, this);\n\n        case 1:\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row bg-info m-0 p-2 \",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light\",\n              children: \"In mathematics, the binomial coefficients are the positive integers that occur as coefficients in the binomial theorem. It is the coefficient of the x^k term in the polynomial expansion of the binomial power (1+x)^n\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light\",\n              children: \"nCr = n! / ( k! * (n-k)! )\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light\",\n              children: \"function = nCr(n,r)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light\",\n              children: [\"nCr(a,a) = 1 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 38\n              }, this), \"nCr(a,0) = 1 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 41,\n                columnNumber: 38\n              }, this), \"nCr(n,r) = nCr(n-1,r-1)+nCr(n-1,r)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 24\n          }, this);\n\n        case 2:\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row bg-info m-0 p-2 \",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light \",\n              children: \"In combinatorial mathematics, a derangement is a permutation of the elements of a set, such that no element appears in its original position.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light \",\n              children: \"N = Nth Derangement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light \",\n              children: \"function = der(n)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light \",\n              children: [\"der(0) = 1 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 36\n              }, this), \"der(1) = 0 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 36\n              }, this), \"der(n) = (n-1) * ( der(n-1) + der(n-2) )\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 24\n          }, this);\n\n        case 3:\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row bg-info m-0 p-2 \",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light \",\n              children: \"N = Number P = Power\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light \",\n              children: \"function = bigmod(n,p)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light \",\n              children: [\"bigmod(a,0) = 1 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 41\n              }, this), \"bigmod(a,1) = a \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 41\n              }, this), \"bigmod(n,p) = bigmod(n,p/2)^2; p is even \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 66\n              }, this), \"bigmod(n,p) = bigmod(n,(p-1)/2)^2 * n ; p is odd\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 24\n          }, this);\n\n        case 4:\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row bg-info m-0 p-2 \",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light \",\n              children: \"a Stirling number of the second kind (or Stirling partition number) is the number of ways to partition a set of n objects into k non-empty subsets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light \",\n              children: \"N = Row R = Column\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light \",\n              children: \"function = stir2(n,r)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-3  card me-1 bg-light \",\n              children: [\"stir2(a,a) = 1 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 40\n              }, this), \"stir2(0,a) = 0 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 40\n              }, this), \"stir2(n,r) = stir2(n-1,r) * r + stir2(n-1,r-1)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 24\n          }, this);\n\n        default:\n          return /*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Henlo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 24\n          }, this);\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.Switcherr()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Details;","map":{"version":3,"names":["React","Component","Details","Switcherr","props","algo","render"],"sources":["D:/Major/Recursion Tree/src/Graph/details.jsx"],"sourcesContent":["import React, {Component} from 'react';\n\nclass Details extends Component {\n\n    Switcherr = () => {\n        switch (this.props.algo) {\n            case 0:\n                return <div className='row bg-info m-0 p-2'>\n                    <div className='col-3  card me-1 bg-light '>\n                        The Fibonacci sequence, in which each number is the sum of the two preceding ones. The sequence\n                        commonly starts from 0 and 1\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        N = Nth fibonacchi Number\n                    </div>\n                    <div className='col-3  bg-light '>\n                        function = nCr(n,r)\n                    </div>\n                    <div className='col-3  card me-1 bg-light'>\n                        Fib(0) = 0 <br/>\n                        Fib(1) = 1 <br/>\n                        Fib(n) = Fib(n-1) + Fib(n-2)\n                    </div>\n                </div>;\n\n            case 1:\n                return <div className='row bg-info m-0 p-2 '>\n                    <div className='col-3  card me-1 bg-light'>\n                        In mathematics, the binomial coefficients are the positive integers that occur as coefficients\n                        in the binomial theorem. It is the coefficient of\n                        the x^k term in the polynomial expansion of the binomial power (1+x)^n\n                    </div>\n                    <div className='col-3  card me-1 bg-light'>\n                        nCr = n! / ( k! * (n-k)! )\n                    </div>\n                    <div className='col-3  card me-1 bg-light'>\n                        function = nCr(n,r)\n                    </div>\n                    <div className='col-3  card me-1 bg-light'>\n                        nCr(a,a) = 1 <br/>\n                        nCr(a,0) = 1 <br/>\n                        nCr(n,r) = nCr(n-1,r-1)+nCr(n-1,r)\n                    </div>\n                </div>;\n            case 2:\n                return <div className='row bg-info m-0 p-2 '>\n                    <div className='col-3  card me-1 bg-light '>\n                        In combinatorial mathematics, a derangement is a permutation of the elements of a set, such that\n                        no element appears in its original position.\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        N = Nth Derangement\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        function = der(n)\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        der(0) = 1 <br/>\n                        der(1) = 0 <br/>\n                        der(n) = (n-1) * ( der(n-1) + der(n-2) )\n                    </div>\n                </div>;\n            case 3:\n                return <div className='row bg-info m-0 p-2 '>\n                    <div className='col-3  card me-1 bg-light '>\n                        N = Number\n                        P = Power\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        function = bigmod(n,p)\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        bigmod(a,0) = 1 <br/>\n                        bigmod(a,1) = a <br/>\n                        bigmod(n,p) = bigmod(n,p/2)^2; p is even <br/>\n                        bigmod(n,p) = bigmod(n,(p-1)/2)^2 * n ; p is odd\n                    </div>\n                </div>;\n            case 4:\n                return <div className='row bg-info m-0 p-2 '>\n                    <div className='col-3  card me-1 bg-light '>\n                        a Stirling number of the second kind (or Stirling partition number) is the number of ways to\n                        partition a set of n objects into k non-empty subsets\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        N = Row\n                        R = Column\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        function = stir2(n,r)\n                    </div>\n                    <div className='col-3  card me-1 bg-light '>\n                        stir2(a,a) = 1 <br/>\n                        stir2(0,a) = 0 <br/>\n                        stir2(n,r) = stir2(n-1,r) * r + stir2(n-1,r-1)\n\n                    </div>\n                </div>;\n\n            default:\n                return <b>Henlo</b>;\n\n        }\n    }\n\n    render() {\n        return (\n            <div>\n                {this.Switcherr()}\n            </div>\n        );\n    }\n}\n\nexport default Details;"],"mappings":"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"},"metadata":{},"sourceType":"module"}